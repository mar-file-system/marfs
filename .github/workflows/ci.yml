name: MarFS CI
# There should be some way to use the workflow from the erasureUtils repo instead of duplicating the code from its
# workflow, but I haven't been able to get it to work, so we're going to do this manually

on:
  push:
  pull_request:

jobs:
  Build:
    env:
      Isal_assembler: "nasm"
      Ne_deps: "autoconf libxml2-dev openmpi-bin openmpi-common libopenmpi-dev"
      Marfs_deps: "fuse libfuse-dev"
    runs-on: ubuntu-latest
    steps:
    - name: Setup Build Dependencies + Environment
      run: |
        sudo apt-get install $Isal_assembler $Ne_deps $Marfs_deps
        mkdir install

    - name: Checkout ISA-L
      uses: actions/checkout@v4
      with:
        repository: intel/isa-l
        ref: v2.30.0
        path: isa-l

    - name: Checkout MarFS
      uses: actions/checkout@v4
      with:
        path: marfs

    - name: Build ISA-L
      run: |
        cd isa-l
        ./autogen.sh
        ./configure --prefix="$GITHUB_WORKSPACE/install"
        make install
        cd $GITHUB_WORKSPACE

    - name: Build and Check MarFS
      run: |
        cd marfs
        ./autogen.sh
        ./configure CFLAGS="-I$GITHUB_WORKSPACE/install/include" LDFLAGS="-L$GITHUB_WORKSPACE/install/lib" --prefix="$GITHUB_WORKSPACE/install" --enable-debugRM
        make
        make check
        make install
        cd $GITHUB_WORKSPACE

  # https://doc.rust-lang.org/cargo/guide/continuous-integration.html
  flush_ls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update Toolchain
        run: rustup update stable && rustup default stable

      - name: Build
        run: cargo build --verbose
        working-directory: flush_ls

      - name: Test
        run: cargo test --verbose
        working-directory: flush_ls
